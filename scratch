
sub arc_radius_from_points {
  my($A, $B, $C) = sort { $a->[0] <=> $b->[0] } @_;
  
  my $AB_slope = ($B->[1] - $A->[1]) / ($B->[0] - $A->[0]);
  my $BC_slope = ($C->[1] - $B->[1]) / ($C->[0] - $B->[0]);
  return if $AB_slope == $BC_slope; #straight line, no arc.

  my $AB = sqrt( (($B->[0] - $A->[0])**2 + ($B->[1] - $A->[1])**2) );
  my $BC = sqrt( (($C->[0] - $B->[0])**2 + ($C->[1] - $B->[1])**2) );
  my $CA = sqrt( (($C->[0] - $A->[0])**2 + ($C->[1] - $A->[1])**2) );

  my $s = ($AB + $BC + $CA) / 2;
  my $k = sqrt( $s * ($s - $AB) * ($s - $BC) * ($s - $CA));
  my $r = ( $AB * $BC * $CA) / (4 * $k);

  return $r;
}


sub arc_origin_from_radius_and_points {
  my $r = shift;
  my($A, $B, $C) = sort { $a->[0] <=> $b->[0] } @_;

  my $delta = [ @$A ];
  my $P = [ 0, 0 ]; # $A - $A
  my $Q = [ ($C->[0] - $A->[0]), ($C->[1] - $A->[1]) ]; #C-A


  my($a, $b) = @$Q;
  $|=1;
  my $pm = ($a / 2) * sqrt( ((4 * $r**2) / ($a**2 + $b**2 )) - 1 );
    
  for my $y ( (($b / 2) + $pm), (($b / 2) - $pm) ){
    my $x = ($a**2 + $b**2 - (2 * $b * $y) ) / (2 * $a);
    
    my $xc = $x + $delta->[0];
    my $yc = $y + $delta->[1];

    my $rB = (($B->[0] - $xc)**2 + ($B->[1] - $yc)**2);
    next unless (($r**2 - $rB) / $r**2) < .00001;

    return ($xc, $yc);
  }
  die("Failed to find center");
}

my $target_radius = 6.1;
my $target_origin = [ 5.4, 2.2];
my @points = map { 
  [ $_, ( sqrt(($target_radius**2 - ($_ - $target_origin->[0])**2 )) + $target_origin->[1]) ]
} (-.2, 0, 6);

print map{ "($_->[0], $_->[1]) \n"} @points;

my $radius = arc_radius_from_points(@points);
print "Found Radius: $radius  ${target_radius}\n";

my @o = arc_origin_from_radius_and_points($radius, @points);
print "Found origin: ( $o[0], $o[1])   ($target_origin->[0], $target_origin->[1])\n";

1;
